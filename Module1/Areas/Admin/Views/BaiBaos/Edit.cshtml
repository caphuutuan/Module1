@model Module1.Models.BaiBao

@{
    ViewData["Title"] = "Duyệt bài";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "BaiBaos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <section class="content py-2">
        <div class="container-fluid">
            <!--Content-->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-8">
                            <h5 class="text-csm">Bài báo # @Model.MaBb</h5>
                        </div>
                        <div class="col-4">
                            <div class="float-right pt-1">
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-save"></i>&nbsp; Update
                                </button>
                                <button type="button" class="btn btn-danger btn-sm">
                                    <a href="~/Admin/BaiBaos/Index" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">

                    <div class="col-md-9">
                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.MaBb)

                            <div class="form-group">
                                <label class="control-label col-md-10">Tên bài báo</label>
                                @Html.EditorFor(model => model.TenBb , new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TenBb, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Thể loại</label>
                                @Html.DropDownList("MaTl", ViewBag.CategoryList as SelectList, "Chọn thể loại", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MaTl, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Lĩnh vực</label>
                                @Html.DropDownList("MaLv", ViewBag.LinhVucList as SelectList, "Chọn lĩnh vực", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MaLv, "", new { @class = "text-danger"  })
                            </div>

                                <div class="form-group">
                                    <label for="Thumb">Thumb</label>
                                    <br>
                                    <img class="text-center pb-2" style="max-height: 150px" src="~/images/products/@Model.Thumb" />
                                    <input name="fThumb" type="file" class="form-control-file" asp-for="Thumb">
                                    @Html.ValidationMessageFor(model => model.Thumb, "", new { @class = "text-danger"  })
                                </div>

                            <div class="form-group">
                                <label for="NoiDung" class="control-label col-md-10">Nội dung</label>
                                @Html.EditorFor(model => model.NoiDung , new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger"  })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-horizontal">

                            <div class="form-group">
                                <label class="control-label col-md-10">Tác giả</label>
                                @Html.DisplayFor(model => model.User.Ten, new {@class="form-control"})
                                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Trạng thái</label>
                                    @Html.DropDownListFor(model => model.Status,  new[] {new SelectListItem { Value = "1", Text = "Duyệt" }, new SelectListItem { Value = "2", Text = "Từ chối" }, new SelectListItem { Value = "3", Text = "Đang xử lý" }, }, "[Duyệt bài]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger"  })
                            </div>

                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}


@* 
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#noidung-baibao').summernote({
                height: 300,
                toolbar: [
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['color', ['forecolor']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['insert', ['link', 'picture', 'video']],
                ],
                callbacks: {
                    onImageUpload: function (files) {
                        for (var i = 0; i < files.length; i++) {
                            uploadImage(files[i]);
                        }
                    }
                }
                        function uploadImage(file) {
                var formData = new FormData();
                formData.append("file", file);

                $.ajax({
                    url: '/Admin/UploadImage', // Điều chỉnh đường dẫn tải lên hình ảnh
                    method: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.success) {
                            var imgNode = document.createElement('img');
                            imgNode.src = data.url; // Đường dẫn của hình ảnh sau khi tải lên
                            $('#content').summernote('insertNode', imgNode);
                        }
                    }
                });
            }
            });
        });
    </script>
} *@